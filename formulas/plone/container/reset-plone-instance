#!/usr/bin/bash -e

data_basedir={{ data_basedir }}

debug=
if [ -n "$DEBUG" ] ; then
    debug=echo
fi

instance="$1"

if [ -z "$instance" ] ; then
    echo "Instance must be specified as the first parameter." >&2
    echo "The second parameter may be the base instance to copy data from." >&2
    echo "Instances available (disregard '-green' and '-blue' suffixes):" >&2
    ls -l "$data_basedir"
    exit 64
fi

if ! test -d "$data_basedir"/"$instance"-green ; then
    echo "Instance $instance does not exist in $data_basedir" >&2
    ls -la "$data_basedir"
    exit 2
fi

base="$2"
if [ -z "$base" ] ; then
    base=master
fi

if ! test -d "$data_basedir"/"$base"-green ; then
    echo "Instance $base does not exist in $data_basedir" >&2
    ls -la "$data_basedir"
    exit 2
fi

if [ "$base" == "$instance" ] ; then
    echo "Instance ($instance) and base ($base) cannot be the same." >&2
    exit 64
fi

if [ "$FORCE" != "1" ] ; then
    if [ "$instance" == "master" ] ; then
        echo "For data safety reasons, the master instance cannot be reset from another one." >&2
        echo "If you still want to reset it, set and export variable FORCE to 1." >&2
        exit 4
    fi
fi

$debug service container-plone-"$instance"-green stop || true
$debug cd "$data_basedir"
context=$(ls -Zd "$instance"-green | cut -f 1 -d ' ' || true)
$debug rm -rf "$instance"-green/blobstorage "$instance"-green/filestorage
$debug cp -a --reflink=auto "$base"-green/blobstorage "$instance"-green/blobstorage
$debug cp -a "$base"-green/filestorage "$instance"-green/filestorage
if [ "$context" != "" ] ; then
    $debug chcon -R "$context" "$instance"-green/blobstorage "$instance"-green/filestorage
fi
$debug service container-plone-"$instance"-green start
